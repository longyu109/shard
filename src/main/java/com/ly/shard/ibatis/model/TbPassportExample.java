package com.ly.shard.ibatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TbPassportExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public TbPassportExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    protected TbPassportExample(TbPassportExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tb_passport
     *
     * @ibatorgenerated Tue Aug 09 17:38:14 CST 2016
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return this;
        }

        public Criteria andUidEqualTo(Long value) {
            addCriterion("uid =", value, "uid");
            return this;
        }

        public Criteria andUidNotEqualTo(Long value) {
            addCriterion("uid <>", value, "uid");
            return this;
        }

        public Criteria andUidGreaterThan(Long value) {
            addCriterion("uid >", value, "uid");
            return this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Long value) {
            addCriterion("uid >=", value, "uid");
            return this;
        }

        public Criteria andUidLessThan(Long value) {
            addCriterion("uid <", value, "uid");
            return this;
        }

        public Criteria andUidLessThanOrEqualTo(Long value) {
            addCriterion("uid <=", value, "uid");
            return this;
        }

        public Criteria andUidIn(List values) {
            addCriterion("uid in", values, "uid");
            return this;
        }

        public Criteria andUidNotIn(List values) {
            addCriterion("uid not in", values, "uid");
            return this;
        }

        public Criteria andUidBetween(Long value1, Long value2) {
            addCriterion("uid between", value1, value2, "uid");
            return this;
        }

        public Criteria andUidNotBetween(Long value1, Long value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return this;
        }

        public Criteria andEmailIn(List values) {
            addCriterion("email in", values, "email");
            return this;
        }

        public Criteria andEmailNotIn(List values) {
            addCriterion("email not in", values, "email");
            return this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return this;
        }

        public Criteria andAccountIsNull() {
            addCriterion("account is null");
            return this;
        }

        public Criteria andAccountIsNotNull() {
            addCriterion("account is not null");
            return this;
        }

        public Criteria andAccountEqualTo(String value) {
            addCriterion("account =", value, "account");
            return this;
        }

        public Criteria andAccountNotEqualTo(String value) {
            addCriterion("account <>", value, "account");
            return this;
        }

        public Criteria andAccountGreaterThan(String value) {
            addCriterion("account >", value, "account");
            return this;
        }

        public Criteria andAccountGreaterThanOrEqualTo(String value) {
            addCriterion("account >=", value, "account");
            return this;
        }

        public Criteria andAccountLessThan(String value) {
            addCriterion("account <", value, "account");
            return this;
        }

        public Criteria andAccountLessThanOrEqualTo(String value) {
            addCriterion("account <=", value, "account");
            return this;
        }

        public Criteria andAccountLike(String value) {
            addCriterion("account like", value, "account");
            return this;
        }

        public Criteria andAccountNotLike(String value) {
            addCriterion("account not like", value, "account");
            return this;
        }

        public Criteria andAccountIn(List values) {
            addCriterion("account in", values, "account");
            return this;
        }

        public Criteria andAccountNotIn(List values) {
            addCriterion("account not in", values, "account");
            return this;
        }

        public Criteria andAccountBetween(String value1, String value2) {
            addCriterion("account between", value1, value2, "account");
            return this;
        }

        public Criteria andAccountNotBetween(String value1, String value2) {
            addCriterion("account not between", value1, value2, "account");
            return this;
        }

        public Criteria andMPhoneIsNull() {
            addCriterion("m_phone is null");
            return this;
        }

        public Criteria andMPhoneIsNotNull() {
            addCriterion("m_phone is not null");
            return this;
        }

        public Criteria andMPhoneEqualTo(String value) {
            addCriterion("m_phone =", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneNotEqualTo(String value) {
            addCriterion("m_phone <>", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneGreaterThan(String value) {
            addCriterion("m_phone >", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("m_phone >=", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneLessThan(String value) {
            addCriterion("m_phone <", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneLessThanOrEqualTo(String value) {
            addCriterion("m_phone <=", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneLike(String value) {
            addCriterion("m_phone like", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneNotLike(String value) {
            addCriterion("m_phone not like", value, "mPhone");
            return this;
        }

        public Criteria andMPhoneIn(List values) {
            addCriterion("m_phone in", values, "mPhone");
            return this;
        }

        public Criteria andMPhoneNotIn(List values) {
            addCriterion("m_phone not in", values, "mPhone");
            return this;
        }

        public Criteria andMPhoneBetween(String value1, String value2) {
            addCriterion("m_phone between", value1, value2, "mPhone");
            return this;
        }

        public Criteria andMPhoneNotBetween(String value1, String value2) {
            addCriterion("m_phone not between", value1, value2, "mPhone");
            return this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("password is null");
            return this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("password is not null");
            return this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("password =", value, "password");
            return this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("password <>", value, "password");
            return this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("password >", value, "password");
            return this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("password >=", value, "password");
            return this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("password <", value, "password");
            return this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("password <=", value, "password");
            return this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("password like", value, "password");
            return this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("password not like", value, "password");
            return this;
        }

        public Criteria andPasswordIn(List values) {
            addCriterion("password in", values, "password");
            return this;
        }

        public Criteria andPasswordNotIn(List values) {
            addCriterion("password not in", values, "password");
            return this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("password between", value1, value2, "password");
            return this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("password not between", value1, value2, "password");
            return this;
        }

        public Criteria andActivedIsNull() {
            addCriterion("actived is null");
            return this;
        }

        public Criteria andActivedIsNotNull() {
            addCriterion("actived is not null");
            return this;
        }

        public Criteria andActivedEqualTo(Boolean value) {
            addCriterion("actived =", value, "actived");
            return this;
        }

        public Criteria andActivedNotEqualTo(Boolean value) {
            addCriterion("actived <>", value, "actived");
            return this;
        }

        public Criteria andActivedGreaterThan(Boolean value) {
            addCriterion("actived >", value, "actived");
            return this;
        }

        public Criteria andActivedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("actived >=", value, "actived");
            return this;
        }

        public Criteria andActivedLessThan(Boolean value) {
            addCriterion("actived <", value, "actived");
            return this;
        }

        public Criteria andActivedLessThanOrEqualTo(Boolean value) {
            addCriterion("actived <=", value, "actived");
            return this;
        }

        public Criteria andActivedIn(List values) {
            addCriterion("actived in", values, "actived");
            return this;
        }

        public Criteria andActivedNotIn(List values) {
            addCriterion("actived not in", values, "actived");
            return this;
        }

        public Criteria andActivedBetween(Boolean value1, Boolean value2) {
            addCriterion("actived between", value1, value2, "actived");
            return this;
        }

        public Criteria andActivedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("actived not between", value1, value2, "actived");
            return this;
        }

        public Criteria andNumberAccountIsNull() {
            addCriterion("number_account is null");
            return this;
        }

        public Criteria andNumberAccountIsNotNull() {
            addCriterion("number_account is not null");
            return this;
        }

        public Criteria andNumberAccountEqualTo(Long value) {
            addCriterion("number_account =", value, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountNotEqualTo(Long value) {
            addCriterion("number_account <>", value, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountGreaterThan(Long value) {
            addCriterion("number_account >", value, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountGreaterThanOrEqualTo(Long value) {
            addCriterion("number_account >=", value, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountLessThan(Long value) {
            addCriterion("number_account <", value, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountLessThanOrEqualTo(Long value) {
            addCriterion("number_account <=", value, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountIn(List values) {
            addCriterion("number_account in", values, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountNotIn(List values) {
            addCriterion("number_account not in", values, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountBetween(Long value1, Long value2) {
            addCriterion("number_account between", value1, value2, "numberAccount");
            return this;
        }

        public Criteria andNumberAccountNotBetween(Long value1, Long value2) {
            addCriterion("number_account not between", value1, value2, "numberAccount");
            return this;
        }

        public Criteria andBeautyNumberIsNull() {
            addCriterion("beauty_number is null");
            return this;
        }

        public Criteria andBeautyNumberIsNotNull() {
            addCriterion("beauty_number is not null");
            return this;
        }

        public Criteria andBeautyNumberEqualTo(Boolean value) {
            addCriterion("beauty_number =", value, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberNotEqualTo(Boolean value) {
            addCriterion("beauty_number <>", value, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberGreaterThan(Boolean value) {
            addCriterion("beauty_number >", value, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberGreaterThanOrEqualTo(Boolean value) {
            addCriterion("beauty_number >=", value, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberLessThan(Boolean value) {
            addCriterion("beauty_number <", value, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberLessThanOrEqualTo(Boolean value) {
            addCriterion("beauty_number <=", value, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberIn(List values) {
            addCriterion("beauty_number in", values, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberNotIn(List values) {
            addCriterion("beauty_number not in", values, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberBetween(Boolean value1, Boolean value2) {
            addCriterion("beauty_number between", value1, value2, "beautyNumber");
            return this;
        }

        public Criteria andBeautyNumberNotBetween(Boolean value1, Boolean value2) {
            addCriterion("beauty_number not between", value1, value2, "beautyNumber");
            return this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeIn(List values) {
            addCriterion("create_time in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotIn(List values) {
            addCriterion("create_time not in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return this;
        }

        public Criteria andPwdQuestionIsNull() {
            addCriterion("pwd_question is null");
            return this;
        }

        public Criteria andPwdQuestionIsNotNull() {
            addCriterion("pwd_question is not null");
            return this;
        }

        public Criteria andPwdQuestionEqualTo(String value) {
            addCriterion("pwd_question =", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionNotEqualTo(String value) {
            addCriterion("pwd_question <>", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionGreaterThan(String value) {
            addCriterion("pwd_question >", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionGreaterThanOrEqualTo(String value) {
            addCriterion("pwd_question >=", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionLessThan(String value) {
            addCriterion("pwd_question <", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionLessThanOrEqualTo(String value) {
            addCriterion("pwd_question <=", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionLike(String value) {
            addCriterion("pwd_question like", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionNotLike(String value) {
            addCriterion("pwd_question not like", value, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionIn(List values) {
            addCriterion("pwd_question in", values, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionNotIn(List values) {
            addCriterion("pwd_question not in", values, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionBetween(String value1, String value2) {
            addCriterion("pwd_question between", value1, value2, "pwdQuestion");
            return this;
        }

        public Criteria andPwdQuestionNotBetween(String value1, String value2) {
            addCriterion("pwd_question not between", value1, value2, "pwdQuestion");
            return this;
        }

        public Criteria andPwdAnswerIsNull() {
            addCriterion("pwd_answer is null");
            return this;
        }

        public Criteria andPwdAnswerIsNotNull() {
            addCriterion("pwd_answer is not null");
            return this;
        }

        public Criteria andPwdAnswerEqualTo(String value) {
            addCriterion("pwd_answer =", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerNotEqualTo(String value) {
            addCriterion("pwd_answer <>", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerGreaterThan(String value) {
            addCriterion("pwd_answer >", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerGreaterThanOrEqualTo(String value) {
            addCriterion("pwd_answer >=", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerLessThan(String value) {
            addCriterion("pwd_answer <", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerLessThanOrEqualTo(String value) {
            addCriterion("pwd_answer <=", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerLike(String value) {
            addCriterion("pwd_answer like", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerNotLike(String value) {
            addCriterion("pwd_answer not like", value, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerIn(List values) {
            addCriterion("pwd_answer in", values, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerNotIn(List values) {
            addCriterion("pwd_answer not in", values, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerBetween(String value1, String value2) {
            addCriterion("pwd_answer between", value1, value2, "pwdAnswer");
            return this;
        }

        public Criteria andPwdAnswerNotBetween(String value1, String value2) {
            addCriterion("pwd_answer not between", value1, value2, "pwdAnswer");
            return this;
        }

        public Criteria andIsRobotIsNull() {
            addCriterion("is_robot is null");
            return this;
        }

        public Criteria andIsRobotIsNotNull() {
            addCriterion("is_robot is not null");
            return this;
        }

        public Criteria andIsRobotEqualTo(Boolean value) {
            addCriterion("is_robot =", value, "isRobot");
            return this;
        }

        public Criteria andIsRobotNotEqualTo(Boolean value) {
            addCriterion("is_robot <>", value, "isRobot");
            return this;
        }

        public Criteria andIsRobotGreaterThan(Boolean value) {
            addCriterion("is_robot >", value, "isRobot");
            return this;
        }

        public Criteria andIsRobotGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_robot >=", value, "isRobot");
            return this;
        }

        public Criteria andIsRobotLessThan(Boolean value) {
            addCriterion("is_robot <", value, "isRobot");
            return this;
        }

        public Criteria andIsRobotLessThanOrEqualTo(Boolean value) {
            addCriterion("is_robot <=", value, "isRobot");
            return this;
        }

        public Criteria andIsRobotIn(List values) {
            addCriterion("is_robot in", values, "isRobot");
            return this;
        }

        public Criteria andIsRobotNotIn(List values) {
            addCriterion("is_robot not in", values, "isRobot");
            return this;
        }

        public Criteria andIsRobotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_robot between", value1, value2, "isRobot");
            return this;
        }

        public Criteria andIsRobotNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_robot not between", value1, value2, "isRobot");
            return this;
        }

        public Criteria andIsVerifiedIsNull() {
            addCriterion("is_verified is null");
            return this;
        }

        public Criteria andIsVerifiedIsNotNull() {
            addCriterion("is_verified is not null");
            return this;
        }

        public Criteria andIsVerifiedEqualTo(Boolean value) {
            addCriterion("is_verified =", value, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedNotEqualTo(Boolean value) {
            addCriterion("is_verified <>", value, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedGreaterThan(Boolean value) {
            addCriterion("is_verified >", value, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_verified >=", value, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedLessThan(Boolean value) {
            addCriterion("is_verified <", value, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedLessThanOrEqualTo(Boolean value) {
            addCriterion("is_verified <=", value, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedIn(List values) {
            addCriterion("is_verified in", values, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedNotIn(List values) {
            addCriterion("is_verified not in", values, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedBetween(Boolean value1, Boolean value2) {
            addCriterion("is_verified between", value1, value2, "isVerified");
            return this;
        }

        public Criteria andIsVerifiedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_verified not between", value1, value2, "isVerified");
            return this;
        }

        public Criteria andIsBlacklistedIsNull() {
            addCriterion("is_blacklisted is null");
            return this;
        }

        public Criteria andIsBlacklistedIsNotNull() {
            addCriterion("is_blacklisted is not null");
            return this;
        }

        public Criteria andIsBlacklistedEqualTo(Boolean value) {
            addCriterion("is_blacklisted =", value, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedNotEqualTo(Boolean value) {
            addCriterion("is_blacklisted <>", value, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedGreaterThan(Boolean value) {
            addCriterion("is_blacklisted >", value, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_blacklisted >=", value, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedLessThan(Boolean value) {
            addCriterion("is_blacklisted <", value, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedLessThanOrEqualTo(Boolean value) {
            addCriterion("is_blacklisted <=", value, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedIn(List values) {
            addCriterion("is_blacklisted in", values, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedNotIn(List values) {
            addCriterion("is_blacklisted not in", values, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedBetween(Boolean value1, Boolean value2) {
            addCriterion("is_blacklisted between", value1, value2, "isBlacklisted");
            return this;
        }

        public Criteria andIsBlacklistedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_blacklisted not between", value1, value2, "isBlacklisted");
            return this;
        }

        public Criteria andIsDeletedIsNull() {
            addCriterion("is_deleted is null");
            return this;
        }

        public Criteria andIsDeletedIsNotNull() {
            addCriterion("is_deleted is not null");
            return this;
        }

        public Criteria andIsDeletedEqualTo(Boolean value) {
            addCriterion("is_deleted =", value, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedNotEqualTo(Boolean value) {
            addCriterion("is_deleted <>", value, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedGreaterThan(Boolean value) {
            addCriterion("is_deleted >", value, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_deleted >=", value, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedLessThan(Boolean value) {
            addCriterion("is_deleted <", value, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("is_deleted <=", value, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedIn(List values) {
            addCriterion("is_deleted in", values, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedNotIn(List values) {
            addCriterion("is_deleted not in", values, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("is_deleted between", value1, value2, "isDeleted");
            return this;
        }

        public Criteria andIsDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_deleted not between", value1, value2, "isDeleted");
            return this;
        }

        public Criteria andSaltIsNull() {
            addCriterion("salt is null");
            return this;
        }

        public Criteria andSaltIsNotNull() {
            addCriterion("salt is not null");
            return this;
        }

        public Criteria andSaltEqualTo(String value) {
            addCriterion("salt =", value, "salt");
            return this;
        }

        public Criteria andSaltNotEqualTo(String value) {
            addCriterion("salt <>", value, "salt");
            return this;
        }

        public Criteria andSaltGreaterThan(String value) {
            addCriterion("salt >", value, "salt");
            return this;
        }

        public Criteria andSaltGreaterThanOrEqualTo(String value) {
            addCriterion("salt >=", value, "salt");
            return this;
        }

        public Criteria andSaltLessThan(String value) {
            addCriterion("salt <", value, "salt");
            return this;
        }

        public Criteria andSaltLessThanOrEqualTo(String value) {
            addCriterion("salt <=", value, "salt");
            return this;
        }

        public Criteria andSaltLike(String value) {
            addCriterion("salt like", value, "salt");
            return this;
        }

        public Criteria andSaltNotLike(String value) {
            addCriterion("salt not like", value, "salt");
            return this;
        }

        public Criteria andSaltIn(List values) {
            addCriterion("salt in", values, "salt");
            return this;
        }

        public Criteria andSaltNotIn(List values) {
            addCriterion("salt not in", values, "salt");
            return this;
        }

        public Criteria andSaltBetween(String value1, String value2) {
            addCriterion("salt between", value1, value2, "salt");
            return this;
        }

        public Criteria andSaltNotBetween(String value1, String value2) {
            addCriterion("salt not between", value1, value2, "salt");
            return this;
        }

        public Criteria andUserTypeIsNull() {
            addCriterion("user_type is null");
            return this;
        }

        public Criteria andUserTypeIsNotNull() {
            addCriterion("user_type is not null");
            return this;
        }

        public Criteria andUserTypeEqualTo(Integer value) {
            addCriterion("user_type =", value, "userType");
            return this;
        }

        public Criteria andUserTypeNotEqualTo(Integer value) {
            addCriterion("user_type <>", value, "userType");
            return this;
        }

        public Criteria andUserTypeGreaterThan(Integer value) {
            addCriterion("user_type >", value, "userType");
            return this;
        }

        public Criteria andUserTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_type >=", value, "userType");
            return this;
        }

        public Criteria andUserTypeLessThan(Integer value) {
            addCriterion("user_type <", value, "userType");
            return this;
        }

        public Criteria andUserTypeLessThanOrEqualTo(Integer value) {
            addCriterion("user_type <=", value, "userType");
            return this;
        }

        public Criteria andUserTypeIn(List values) {
            addCriterion("user_type in", values, "userType");
            return this;
        }

        public Criteria andUserTypeNotIn(List values) {
            addCriterion("user_type not in", values, "userType");
            return this;
        }

        public Criteria andUserTypeBetween(Integer value1, Integer value2) {
            addCriterion("user_type between", value1, value2, "userType");
            return this;
        }

        public Criteria andUserTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("user_type not between", value1, value2, "userType");
            return this;
        }
    }
}